version: 2.1
commands:
  cloudformation-deploy:
    parameters:
      stackName:
        type: string
        default: myStack-${CIRCLE_WORKFLOW_ID:0:5}
      path:
        type: string
    steps:
      - run:
          name: deploy Stack
          command: |
            aws cloudformation deploy \
              --stack-name <<parameters.stackName>> \
              --template-file <<parameters.path>> \
              --region=us-east-1
  rollback-infrastructure:
    steps:
      - run:
          name: Rollback Infrastructure
          command: aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5}
          when: on_fail

jobs:
  SayHello:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"

  DeployInfrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Install tar utility
          command: |
            yum install -y tar gzip
      - cloudformation-deploy:
          path: "serversConfigurations.yml"
      - run: echo "[all]" > inventory
      - run:
          name: list all public Ip Address
          command: |
            aws ec2 describe-instances \
              --query "Reservations[*].Instances[*].PublicIpAddress" \
              --output text >> inventory
      - persist_to_workspace:
          root: .
          paths:
            - inventory
      - rollback-infrastructure

  print_inventory:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - attach_workspace:
          at: serverSetup
      - run:
          name: "print output inventory file"
          command: cat serverSetup/inventory
  ConfigureInfrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["bc:bb:64:a6:b0:50:ad:d9:7b:2a:3f:ae:4e:f6:99:3a"]
      - attach_workspace:
          at: serverSetup
      - run: apk add --update ansible
      - run: cd serverSetup && ansible-playbook -i inventory main.yml
      # - rollback-infrastructure

workflows:
  say-hello-workflow:
    jobs:
      - SayHello
      # - DeployInfrastructure
      # - print_inventory:
      #     requires:
      #       - DeployInfrastructure
      - ConfigureInfrastructure
